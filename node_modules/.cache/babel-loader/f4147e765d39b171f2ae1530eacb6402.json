{"ast":null,"code":"import React from\"react\";import\"../../../../Styles/Style.css\";var StarSearchRenderList=function StarSearchRenderList(event,apikey){var searchField=event.target.value;// storing the URL for searching movies\nvar personSearch=\"https://api.themoviedb.org/3/search/person?api_key=\"+apikey+\"&language=en-US&query=\"+searchField+\"&page=1&include_adult=false\";var promise=new Promise(function(resolve,reject){var fetchStarData=fetch(personSearch);resolve(fetchStarData);});promise.then(function(data){return data.json();}).then(function(data){var filterPerson=data.results.filter(function(people){return people.name===searchField;});filterPerson.forEach(function(person){var personSearchWithID=\"https://api.themoviedb.org/3/person/\"+person.id+\"?api_key=\"+apikey+\"&language=en-US\";var secondPromise=new Promise(function(resolve,reject){resolve(fetch(personSearchWithID));});secondPromise.then(function(data){return data.json();}).then(function(data){var starSearchDiv=document.getElementById(\"startSearchDiv\");starSearchDiv.innerHTML=\"\";var pName=document.createElement(\"p\");pName.innerHTML=\"<strong> Name</strong>: \"+data.name;var pBiography=document.createElement(\"p\");pBiography.innerHTML=\"<strong>Description: </strong>\"+data.biography;var placeOfBirth=document.createElement(\"p\");placeOfBirth.innerHTML=\"<strong>Place of Birth: </strong>\"+data.place_of_birth;var starImage=document.createElement(\"img\");starImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\"+data.profile_path);starSearchDiv.setAttribute(\"class\",\"cardBody\");starSearchDiv.appendChild(pName);starSearchDiv.appendChild(pBiography);starSearchDiv.appendChild(placeOfBirth);starSearchDiv.appendChild(starImage);});});});};export default StarSearchRenderList;","map":{"version":3,"sources":["/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Body/StarSearch/StarSearchFunction/StarSearchFunction.js"],"names":["React","StarSearchRenderList","event","apikey","searchField","target","value","personSearch","promise","Promise","resolve","reject","fetchStarData","fetch","then","data","json","filterPerson","results","filter","people","name","forEach","person","personSearchWithID","id","secondPromise","starSearchDiv","document","getElementById","innerHTML","pName","createElement","pBiography","biography","placeOfBirth","place_of_birth","starImage","setAttribute","profile_path","appendChild"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,8BAAP,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAOC,MAAP,CAAkB,CAC3C,GAAIC,CAAAA,WAAW,CAAGF,KAAK,CAACG,MAAN,CAAaC,KAA/B,CACA;AACA,GAAMC,CAAAA,YAAY,CAAG,sDAAwDJ,MAAxD,CAAiE,wBAAjE,CAA4FC,WAA5F,CAAyG,6BAA9H,CACA,GAAMI,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAASC,MAAT,CAAkB,CAC3C,GAAMC,CAAAA,aAAa,CAAGC,KAAK,CAACN,YAAD,CAA3B,CACCG,OAAO,CAACE,aAAD,CAAP,CACH,CAHe,CAAhB,CAIAJ,OAAO,CAACM,IAAR,CAAa,SAACC,IAAD,QAASA,CAAAA,IAAI,CAACC,IAAL,EAAT,EAAb,EACCF,IADD,CACM,SAACC,IAAD,CAAQ,CACX,GAAME,CAAAA,YAAY,CAAIF,IAAI,CAACG,OAAL,CAAaC,MAAb,CAAoB,SAACC,MAAD,CAAU,CAC3C,MAAOA,CAAAA,MAAM,CAACC,IAAP,GAAgBjB,WAAvB,CACP,CAFoB,CAAtB,CAGCa,YAAY,CAACK,OAAb,CAAqB,SAACC,MAAD,CAAU,CAC3B,GAAMC,CAAAA,kBAAkB,CAAG,uCAAwCD,MAAM,CAACE,EAA/C,CAAkD,WAAlD,CAA+DtB,MAA/D,CAAsE,iBAAjG,CACD,GAAMuB,CAAAA,aAAa,CAAI,GAAIjB,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAASC,MAAT,CAAkB,CAC5CD,OAAO,CAACG,KAAK,CAACW,kBAAD,CAAN,CAAP,CACP,CAFqB,CAAvB,CAGCE,aAAa,CAACZ,IAAd,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EAAnB,EACCF,IADD,CACM,SAACC,IAAD,CAAU,CACZ,GAAMY,CAAAA,aAAa,CAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAtB,CACAF,aAAa,CAACG,SAAd,CAAyB,EAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAd,CACAD,KAAK,CAACD,SAAN,CAAkB,2BAA6Bf,IAAI,CAACM,IAApD,CACA,GAAMY,CAAAA,UAAU,CAAGL,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAnB,CACAC,UAAU,CAACH,SAAX,CAAuB,iCAAmCf,IAAI,CAACmB,SAA/D,CACA,GAAMC,CAAAA,YAAY,CAAGP,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAArB,CACAG,YAAY,CAACL,SAAb,CAAyB,oCAAsCf,IAAI,CAACqB,cAApE,CACA,GAAMC,CAAAA,SAAS,CAAGT,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAlB,CACAK,SAAS,CAACC,YAAV,CAAuB,KAAvB,CAA6B,mCAAqCvB,IAAI,CAACwB,YAAvE,EACAZ,aAAa,CAACW,YAAd,CAA2B,OAA3B,CAAmC,UAAnC,EACAX,aAAa,CAACa,WAAd,CAA0BT,KAA1B,EACAJ,aAAa,CAACa,WAAd,CAA0BP,UAA1B,EACAN,aAAa,CAACa,WAAd,CAA0BL,YAA1B,EACAR,aAAa,CAACa,WAAd,CAA0BH,SAA1B,EAEH,CAlBD,EAmBH,CAxBD,EA0BH,CA/BD,EAgCH,CAxCD,CA0CA,cAAepC,CAAAA,oBAAf","sourcesContent":["import React from \"react\"\nimport \"../../../../Styles/Style.css\"\n\nconst StarSearchRenderList = (event,apikey) => {\n    let searchField = event.target.value\n    // storing the URL for searching movies\n    const personSearch = \"https://api.themoviedb.org/3/search/person?api_key=\" + apikey + \"&language=en-US&query=\" + searchField +\"&page=1&include_adult=false\"\n    const promise = new Promise((resolve,reject)=>{\n       const fetchStarData = fetch(personSearch)\n        resolve(fetchStarData)\n    })\n    promise.then((data)=> data.json())\n    .then((data)=>{\n       const filterPerson =  data.results.filter((people)=>{\n                return people.name === searchField\n        })\n        filterPerson.forEach((person)=>{\n            const personSearchWithID = \"https://api.themoviedb.org/3/person/\"+ person.id+\"?api_key=\"+ apikey+\"&language=en-US\"\n           const secondPromise =  new Promise((resolve,reject)=>{\n                    resolve(fetch(personSearchWithID))\n            })\n            secondPromise.then((data) => data.json())\n            .then((data) => {\n                const starSearchDiv = document.getElementById(\"startSearchDiv\");\n                starSearchDiv.innerHTML =\"\"\n                const pName = document.createElement(\"p\"); \n                pName.innerHTML = \"<strong> Name</strong>: \" + data.name\n                const pBiography = document.createElement(\"p\"); \n                pBiography.innerHTML = \"<strong>Description: </strong>\" + data.biography\n                const placeOfBirth = document.createElement(\"p\");\n                placeOfBirth.innerHTML = \"<strong>Place of Birth: </strong>\" + data.place_of_birth\n                const starImage = document.createElement(\"img\"); \n                starImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + data.profile_path)\n                starSearchDiv.setAttribute(\"class\",\"cardBody\")\n                starSearchDiv.appendChild(pName)\n                starSearchDiv.appendChild(pBiography)\n                starSearchDiv.appendChild(placeOfBirth)\n                starSearchDiv.appendChild(starImage)\n\n            })\n        })\n\n    })\n}\n\nexport default StarSearchRenderList"]},"metadata":{},"sourceType":"module"}