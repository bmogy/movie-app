{"ast":null,"code":"import React from \"react\";\n\nconst TVFunctions = (event, apikey) => {\n  //storing the event\n  let searchField = event.target.value; // storing the URL for searching movies\n\n  const tvSearch = \"https://api.themoviedb.org/3/search/tv?api_key=\" + apikey + \"&language=en-US&query=\" + searchField + \"&page=1&include_adult=false\"; // creating my promise    \n\n  const promise = new Promise((resolve, reject) => {\n    const catchData = fetch(tvSearch);\n    resolve(catchData);\n  }); // converting the data to json data\n\n  promise.then(response => response.json()) //converting the data to a object\n  .then(data => {\n    console.log(data); // grabbed the div tag from the Movie.js\n\n    const movieDiv = document.getElementById(\"tvDiv\");\n    movieDiv.innerHTML = \"\"; // movieDiv.innerHTML=\"\"\n    // create p tag for movie over view\n\n    const movieOverView = document.createElement(\"p\");\n    movieOverView.innerHTML = \"\"; // create p tag for movie title\n\n    const movieTilte = document.createElement(\"p\");\n    movieTilte.innerHTML = \"\";\n    const movieImage = document.createElement(\"img\");\n    const movieReleaseDate = document.createElement(\"p\"); // filter through the list of objects        \n\n    let filteredMovieData = data.results.filter(movie => {\n      return movie.name === searchField;\n    }); // printing off the list of objects\n\n    filteredMovieData.forEach(movie => {\n      movieImage.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + movie.poster_path);\n      movieImage.setAttribute(\"alt\", \"Sorry, there are problems with the image\");\n      movieTilte.innerHTML = \"<Strong>Title: </Strong>\" + movie.name;\n      movieOverView.innerHTML = \"<Strong>Movie Overview: </Strong>\" + movie.overview;\n      movieReleaseDate.innerHTML = \"<Strong> Released: \" + movie.first_air_date + \"</Strong>\";\n      movieDiv.appendChild(movieTilte);\n      movieDiv.appendChild(movieOverView);\n      movieDiv.appendChild(movieImage);\n      movieDiv.appendChild(movieReleaseDate);\n      console.log(movieTilte);\n      console.log(movieOverView);\n      new Promise((resolve, reject) => {\n        const actorData = fetch(\"https://api.themoviedb.org/3/tv/\" + movie.id + \"/credits?api_key=\" + api);\n        resolve(actorData);\n      }).then(response => response.json()).then(data => {\n        data.cast.forEach(data => {\n          const actorP = document.createElement(\"p\");\n          const actorRole = document.createElement(\"p\");\n          const actorPicture = document.createElement(\"img\");\n          actorPicture.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + data.profile_path);\n          actorRole.innerHTML = \"Role: \" + data.character;\n          actorP.innerHTML = \"Crew: \" + data.name;\n          movieDiv.appendChild(actorP);\n          movieDiv.appendChild(actorRole);\n          movieDiv.appendChild(actorPicture);\n          console.log(data);\n        });\n      });\n    });\n  });\n};\n\nexport default TVFunctions;","map":{"version":3,"sources":["/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Body/TV/TVFunctions/TVFunctions.js"],"names":["React","TVFunctions","event","apikey","searchField","target","value","tvSearch","promise","Promise","resolve","reject","catchData","fetch","then","response","json","data","console","log","movieDiv","document","getElementById","innerHTML","movieOverView","createElement","movieTilte","movieImage","movieReleaseDate","filteredMovieData","results","filter","movie","name","forEach","setAttribute","poster_path","overview","first_air_date","appendChild","actorData","id","api","cast","actorP","actorRole","actorPicture","profile_path","character"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst TVFunctions = (event, apikey) => {\n //storing the event\n        \n let searchField = event.target.value\n\n // storing the URL for searching movies\nconst tvSearch = \"https://api.themoviedb.org/3/search/tv?api_key=\" + apikey + \"&language=en-US&query=\" + searchField +\"&page=1&include_adult=false\"\n // creating my promise    \nconst promise = new Promise((resolve,reject)=>{\n     const catchData =  fetch(tvSearch)\n     resolve(catchData);\n})\n// converting the data to json data\npromise.then((response)=>response.json())\n//converting the data to a object\n.then((data)=>{\n    console.log(data)\n // grabbed the div tag from the Movie.js\n const movieDiv = document.getElementById(\"tvDiv\");\n movieDiv.innerHTML =\"\"\n// movieDiv.innerHTML=\"\"\n// create p tag for movie over view\n const movieOverView =document.createElement(\"p\")\n movieOverView.innerHTML =\"\"\n // create p tag for movie title\n const movieTilte = document.createElement(\"p\")\n movieTilte.innerHTML =\"\"\n const movieImage = document.createElement(\"img\");\n const movieReleaseDate = document.createElement(\"p\");\n // filter through the list of objects        \n     let filteredMovieData = data.results.filter((movie)=>{\n             return  movie.name === searchField\n     })\n  \n\n     // printing off the list of objects\n     filteredMovieData.forEach((movie)=>{\n         movieImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + movie.poster_path)\n         movieImage.setAttribute(\"alt\",\"Sorry, there are problems with the image\")\n         movieTilte.innerHTML=\"<Strong>Title: </Strong>\" + movie.name\n         movieOverView.innerHTML =\"<Strong>Movie Overview: </Strong>\" + movie.overview\n         movieReleaseDate.innerHTML= \"<Strong> Released: \" +  movie.first_air_date+ \"</Strong>\"\n         movieDiv.appendChild(movieTilte)\n         movieDiv.appendChild(movieOverView)\n         movieDiv.appendChild(movieImage)\n         movieDiv.appendChild(movieReleaseDate)\n         console.log(movieTilte)\n         console.log(movieOverView)\n         new Promise((resolve,reject)=>{\n             const actorData = fetch(\"https://api.themoviedb.org/3/tv/\"+ movie.id+\"/credits?api_key=\" + api)\n             resolve(actorData)\n         }).then((response)=> response.json())\n         .then((data)=>{\n             data.cast.forEach((data)=>{\n                 const actorP = document.createElement(\"p\");\n                 const actorRole = document.createElement(\"p\")\n                 const actorPicture = document.createElement(\"img\")\n                 actorPicture.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + data.profile_path)\n                 actorRole.innerHTML= \"Role: \" + data.character \n                 actorP.innerHTML = \"Crew: \" +  data.name\n                 movieDiv.appendChild(actorP)\n                 movieDiv.appendChild(actorRole)\n                 movieDiv.appendChild(actorPicture)\n\n                 console.log(data)\n             })\n         })\n     })\n\n})\n}\nexport default TVFunctions"]},"metadata":{},"sourceType":"module"}