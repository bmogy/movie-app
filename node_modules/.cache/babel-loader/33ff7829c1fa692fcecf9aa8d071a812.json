{"ast":null,"code":"import React from \"react\";\n\nconst TVFunctions = (event, apikey) => {\n  //storing the event\n  let searchField = event.target.value; // storing the URL for searching movies\n\n  const tvSearch = \"https://api.themoviedb.org/3/search/tv?api_key=\" + apikey + \"&language=en-US&query=\" + searchField + \"&page=1&include_adult=false\"; // creating my promise    \n\n  const promise = new Promise((resolve, reject) => {\n    const catchData = fetch(tvSearch);\n    resolve(catchData);\n  }); // converting the data to json data\n\n  promise.then(response => response.json()) //converting the data to a object\n  .then(data => {\n    console.log(data); // grabbed the div tag from the Movie.js\n\n    const tvDiv = document.getElementById(\"tvDiv\");\n    tvDiv.innerHTML = \"\"; // movieDiv.innerHTML=\"\"\n    // create p tag for movie over view\n\n    const tvOverView = document.createElement(\"p\");\n    tvOverView.innerHTML = \"\"; // create p tag for movie title\n\n    const tvTilte = document.createElement(\"p\");\n    tvTilte.innerHTML = \"\";\n    const tvImage = document.createElement(\"img\");\n    const tvReleaseDate = document.createElement(\"p\"); // filter through the list of objects        \n\n    let filtereTVData = data.results.filter(tv => {\n      return tv.name === searchField;\n    }); // printing off the list of objects\n\n    filtereTVData.forEach(tv => {\n      tvImage.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + tv.poster_path);\n      tvImage.setAttribute(\"alt\", \"Sorry, there are problems with the image\");\n      tvTilte.innerHTML = \"<Strong>Title: </Strong>\" + tv.name;\n      tvOverView.innerHTML = \"<Strong>Movie Overview: </Strong>\" + tv.overview;\n      tvReleaseDate.innerHTML = \"<Strong> Released: \" + tv.first_air_date + \"</Strong>\";\n      tvDiv.appendChild(movieTilte);\n      tvDiv.appendChild(movieOverView);\n      tvDiv.appendChild(movieImage);\n      tvDiv.appendChild(movieReleaseDate);\n      console.log(movieTilte);\n      console.log(movieOverView);\n      new Promise((resolve, reject) => {\n        const actorData = fetch(\"https://api.themoviedb.org/3/tv/\" + tv.id + \"/credits?api_key=\" + apikey);\n        resolve(actorData);\n      }).then(response => response.json()).then(data => {\n        data.cast.forEach(data => {\n          const actorP = document.createElement(\"p\");\n          const actorRole = document.createElement(\"p\");\n          const actorPicture = document.createElement(\"img\");\n          actorPicture.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + data.profile_path);\n          actorRole.innerHTML = \"Role: \" + data.character;\n          actorP.innerHTML = \"Crew: \" + data.name;\n          tvDiv.appendChild(actorP);\n          tvDiv.appendChild(actorRole);\n          tvDiv.appendChild(actorPicture);\n          console.log(data);\n        });\n      });\n    });\n  });\n};\n\nexport default TVFunctions;","map":{"version":3,"sources":["/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Body/TV/TVFunctions/TVFunctions.js"],"names":["React","TVFunctions","event","apikey","searchField","target","value","tvSearch","promise","Promise","resolve","reject","catchData","fetch","then","response","json","data","console","log","tvDiv","document","getElementById","innerHTML","tvOverView","createElement","tvTilte","tvImage","tvReleaseDate","filtereTVData","results","filter","tv","name","forEach","setAttribute","poster_path","overview","first_air_date","appendChild","movieTilte","movieOverView","movieImage","movieReleaseDate","actorData","id","cast","actorP","actorRole","actorPicture","profile_path","character"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst TVFunctions = (event, apikey) => {\n //storing the event\n        \n let searchField = event.target.value\n\n // storing the URL for searching movies\nconst tvSearch = \"https://api.themoviedb.org/3/search/tv?api_key=\" + apikey + \"&language=en-US&query=\" + searchField +\"&page=1&include_adult=false\"\n // creating my promise    \nconst promise = new Promise((resolve,reject)=>{\n     const catchData =  fetch(tvSearch)\n     resolve(catchData);\n})\n// converting the data to json data\npromise.then((response)=>response.json())\n//converting the data to a object\n.then((data)=>{\n    console.log(data)\n // grabbed the div tag from the Movie.js\n const tvDiv = document.getElementById(\"tvDiv\");\n tvDiv.innerHTML =\"\"\n// movieDiv.innerHTML=\"\"\n// create p tag for movie over view\n const tvOverView =document.createElement(\"p\")\n tvOverView.innerHTML =\"\"\n // create p tag for movie title\n const tvTilte = document.createElement(\"p\")\n tvTilte.innerHTML =\"\"\n const tvImage = document.createElement(\"img\");\n const tvReleaseDate = document.createElement(\"p\");\n // filter through the list of objects        \n     let filtereTVData = data.results.filter((tv)=>{\n             return  tv.name === searchField\n     })\n  \n\n     // printing off the list of objects\n     filtereTVData.forEach((tv)=>{\n         tvImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + tv.poster_path)\n         tvImage.setAttribute(\"alt\",\"Sorry, there are problems with the image\")\n         tvTilte.innerHTML=\"<Strong>Title: </Strong>\" + tv.name\n         tvOverView.innerHTML =\"<Strong>Movie Overview: </Strong>\" + tv.overview\n         tvReleaseDate.innerHTML= \"<Strong> Released: \" +  tv.first_air_date+ \"</Strong>\"\n         tvDiv.appendChild(movieTilte)\n         tvDiv.appendChild(movieOverView)\n         tvDiv.appendChild(movieImage)\n         tvDiv.appendChild(movieReleaseDate)\n         console.log(movieTilte)\n         console.log(movieOverView)\n         new Promise((resolve,reject)=>{\n             const actorData = fetch(\"https://api.themoviedb.org/3/tv/\"+ tv.id+\"/credits?api_key=\" + apikey)\n             resolve(actorData)\n         }).then((response)=> response.json())\n         .then((data)=>{\n             data.cast.forEach((data)=>{\n                 const actorP = document.createElement(\"p\");\n                 const actorRole = document.createElement(\"p\")\n                 const actorPicture = document.createElement(\"img\")\n                 actorPicture.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + data.profile_path)\n                 actorRole.innerHTML= \"Role: \" + data.character \n                 actorP.innerHTML = \"Crew: \" +  data.name\n                 tvDiv.appendChild(actorP)\n                 tvDiv.appendChild(actorRole)\n                 tvDiv.appendChild(actorPicture)\n\n                 console.log(data)\n             })\n         })\n     })\n\n})\n}\nexport default TVFunctions"]},"metadata":{},"sourceType":"module"}