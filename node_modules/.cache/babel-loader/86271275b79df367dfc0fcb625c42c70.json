{"ast":null,"code":"var _jsxFileName = \"/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Layout.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport Movie from \"./Body/Movie/Movie\";\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiKey: \"b2f49c297ee42a377615666c4da25acf\",\n      storedDate: []\n    };\n\n    this.inputHandler = event => {\n      //storing the event\n      let searchField = event.target.value; // storing the URL for searching movies\n\n      const movieSearch = \"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.apiKey + \"&language=en-US&query=\" + searchField + \"&page=1&include_adult=false\"; // creating my promise    \n\n      const promise = new Promise((resolve, reject) => {\n        const catchData = fetch(movieSearch);\n        resolve(catchData);\n      }); // converting the data to json data\n\n      promise.then(response => response.json()) //converting the data to a object\n      .then(data => {\n        // grabbed the div tag from the Movie.js\n        const movieDiv = document.getElementById(\"movieDiv\");\n        movieDiv.innerHTML = \"\"; // movieDiv.innerHTML=\"\"\n        // create p tag for movie over view\n\n        const movieOverView = document.createElement(\"p\");\n        movieOverView.innerHTML = \"\"; // create p tag for movie title\n\n        const movieTilte = document.createElement(\"p\");\n        movieTilte.innerHTML = \"\";\n        const movieImage = document.createElement(\"img\");\n        const movieReleaseDate = document.createElement(\"p\"); // filter through the list of objects        \n\n        const filteredMovieData = data.results.filter(movie => {\n          if (searchField === \"\") {\n            return event.target.vale + \" \";\n          } else {\n            console.log(movie.title);\n            return movie.original_title === searchField;\n          }\n        }); // printing off the list of objects\n\n        filteredMovieData.forEach(movie => {\n          movieImage.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + movie.poster_path);\n          movieImage.setAttribute(\"alt\", \"Sorry, there are problems with the image\");\n          movieTilte.innerHTML = \"<Strong>Title: </Strong>\" + movie.title;\n          movieOverView.innerHTML = \"<Strong>Movie Overview: </Strong>\" + movie.overview;\n          movieReleaseDate.innerHTML = \"<Strong> Released: \" + movie.release_date + \"</Strong>\";\n          movieDiv.appendChild(movieTilte);\n          movieDiv.appendChild(movieOverView);\n          movieDiv.appendChild(movieImage);\n          movieDiv.appendChild(movieReleaseDate);\n          console.log(movieTilte);\n          console.log(movieOverView);\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Movie, {\n      inputHandler: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Layout.js"],"names":["React","Component","Header","Movie","Layout","state","apiKey","storedDate","inputHandler","event","searchField","target","value","movieSearch","promise","Promise","resolve","reject","catchData","fetch","then","response","json","data","movieDiv","document","getElementById","innerHTML","movieOverView","createElement","movieTilte","movieImage","movieReleaseDate","filteredMovieData","results","filter","movie","vale","console","log","title","original_title","forEach","setAttribute","poster_path","overview","release_date","appendChild","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Header from \"./Header/Header\"\nimport Movie from \"./Body/Movie/Movie\"\n\nclass Layout extends Component{\n    // creatong the states\n    state = {\n        apiKey:\"b2f49c297ee42a377615666c4da25acf\",\n        storedDate:[]\n    }\n    // creating input hnadler function where it will pull from the movie dba apt anytime someone types something\n    inputHandler =  (event) => {\n        //storing the event\n         let searchField = event.target.value\n\n        // storing the URL for searching movies\n       const movieSearch = \"https://api.themoviedb.org/3/search/movie?api_key=\" + this.state.apiKey + \"&language=en-US&query=\" + searchField +\"&page=1&include_adult=false\"\n        // creating my promise    \n       const promise = new Promise((resolve,reject)=>{\n            const catchData =  fetch(movieSearch)\n            resolve(catchData);\n       })\n       // converting the data to json data\n       promise.then((response)=>response.json())\n       //converting the data to a object\n       .then((data)=>{\n        // grabbed the div tag from the Movie.js\n        const movieDiv = document.getElementById(\"movieDiv\");\n        movieDiv.innerHTML =\"\"\n       // movieDiv.innerHTML=\"\"\n       // create p tag for movie over view\n        const movieOverView =document.createElement(\"p\")\n        movieOverView.innerHTML =\"\"\n        // create p tag for movie title\n        const movieTilte = document.createElement(\"p\")\n        movieTilte.innerHTML =\"\"\n        const movieImage = document.createElement(\"img\");\n        const movieReleaseDate = document.createElement(\"p\");\n        \n        // filter through the list of objects        \n            const filteredMovieData = data.results.filter((movie)=>{\n                if(searchField ===\"\"){\n                    return event.target.vale + \" \"\n                }else{\n                    console.log(movie.title)\n                    return movie.original_title=== searchField\n                }\n              \n            })\n            // printing off the list of objects\n            filteredMovieData.forEach((movie)=>{\n                movieImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + movie.poster_path)\n                movieImage.setAttribute(\"alt\",\"Sorry, there are problems with the image\")\n                movieTilte.innerHTML=\"<Strong>Title: </Strong>\" + movie.title\n                movieOverView.innerHTML =\"<Strong>Movie Overview: </Strong>\" + movie.overview\n                movieReleaseDate.innerHTML= \"<Strong> Released: \" +  movie.release_date+ \"</Strong>\"\n                movieDiv.appendChild(movieTilte)\n                movieDiv.appendChild(movieOverView)\n                movieDiv.appendChild(movieImage)\n                movieDiv.appendChild(movieReleaseDate)\n                console.log(movieTilte)\n                console.log(movieOverView)\n\n            })\n       \n       })\n       \n    }\n    render(){\n        return (\n            <div>\n            <Header></Header>\n            <Movie inputHandler={this.inputHandler}></Movie>\n            </div>\n        )\n    }\n}\nexport default Layout"]},"metadata":{},"sourceType":"module"}