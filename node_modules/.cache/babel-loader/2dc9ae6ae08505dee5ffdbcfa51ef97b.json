{"ast":null,"code":"var _jsxFileName = \"/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Layout.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport Movie from \"./Body/Movie/Movie\";\nimport TV from \"./Body/TV/TV\";\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiKey: \"b2f49c297ee42a377615666c4da25acf\",\n      storedDate: []\n    };\n\n    this.inputHandler = (event, divLocation, searchType, name) => {\n      //storing the event\n      let searchField = event.target.value; // storing the URL for searching movies\n\n      const movieSearch = \"https://api.themoviedb.org/3/search/\" + searchType + \"?api_key=\" + this.state.apiKey + \"&language=en-US&query=\" + searchField + \"&page=1&include_adult=false\"; // creating my promise    \n\n      const promise = new Promise((resolve, reject) => {\n        const catchData = fetch(movieSearch);\n        resolve(catchData);\n      }); // converting the data to json data\n\n      promise.then(response => response.json()) //converting the data to a object\n      .then(data => {\n        // grabbed the div tag from the Movie.js\n        const movieDiv = document.getElementById(divLocation);\n        movieDiv.innerHTML = \"\"; // movieDiv.innerHTML=\"\"\n        // create p tag for movie over view\n\n        const movieOverView = document.createElement(\"p\");\n        movieOverView.innerHTML = \"\"; // create p tag for movie title\n\n        const movieTilte = document.createElement(\"p\");\n        movieTilte.innerHTML = \"\";\n        const movieImage = document.createElement(\"img\");\n        const movieReleaseDate = document.createElement(\"p\"); // filter through the list of objects        \n\n        const filteredMovieData = data.results.filter(movie => {\n          console.log(movie.name);\n          return movie.name === searchField;\n        }); // printing off the list of objects\n\n        filteredMovieData.forEach(movie => {\n          movieImage.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + movie.poster_path);\n          movieImage.setAttribute(\"alt\", \"Sorry, there are problems with the image\");\n          movieTilte.innerHTML = \"<Strong>Title: </Strong>\" + movie.title;\n          movieOverView.innerHTML = \"<Strong>Movie Overview: </Strong>\" + movie.overview;\n          movieReleaseDate.innerHTML = \"<Strong> Released: \" + movie.release_date + \"</Strong>\";\n          movieDiv.appendChild(movieTilte);\n          movieDiv.appendChild(movieOverView);\n          movieDiv.appendChild(movieImage);\n          movieDiv.appendChild(movieReleaseDate);\n          console.log(movieTilte);\n          console.log(movieOverView);\n          new Promise((resolve, reject) => {\n            const actorData = fetch(\"https://api.themoviedb.org/3/movie/\" + movie.id + \"/credits?api_key=\" + this.state.apiKey);\n            resolve(actorData);\n          }).then(response => response.json()).then(data => {\n            data.cast.forEach(data => {\n              const actorP = document.createElement(\"p\");\n              const actorRole = document.createElement(\"p\");\n              const actorPicture = document.createElement(\"img\");\n              actorPicture.setAttribute(\"src\", \"https://image.tmdb.org/t/p/w300/\" + data.profile_path);\n              actorRole.innerHTML = \"Role: \" + data.character;\n              actorP.innerHTML = \"Crew: \" + data.name;\n              movieDiv.appendChild(actorP);\n              movieDiv.appendChild(actorRole);\n              movieDiv.appendChild(actorPicture);\n              console.log(data);\n            });\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Movie, {\n      inputHandler: event => this.inputHandler(event, \"movieDiv\", \"movie\", \"title\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TV, {\n      inputHandler: event => this.inputHandler(event, \"tvDiv\", \"tv\", \"name\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/bmogy/Documents/Web Development/React/movie-app/movie-app/src/Layout/Layout.js"],"names":["React","Component","Header","Movie","TV","Layout","state","apiKey","storedDate","inputHandler","event","divLocation","searchType","name","searchField","target","value","movieSearch","promise","Promise","resolve","reject","catchData","fetch","then","response","json","data","movieDiv","document","getElementById","innerHTML","movieOverView","createElement","movieTilte","movieImage","movieReleaseDate","filteredMovieData","results","filter","movie","console","log","forEach","setAttribute","poster_path","title","overview","release_date","appendChild","actorData","id","cast","actorP","actorRole","actorPicture","profile_path","character","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,EAAP,MAAe,cAAf;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA8B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAElB;AACJC,MAAAA,MAAM,EAAC,kCADH;AAEJC,MAAAA,UAAU,EAAC;AAFP,KAFkB;;AAAA,SAO1BC,YAP0B,GAOV,CAACC,KAAD,EAAOC,WAAP,EAAmBC,UAAnB,EAA8BC,IAA9B,KAAuC;AACnD;AACC,UAAIC,WAAW,GAAGJ,KAAK,CAACK,MAAN,CAAaC,KAA/B,CAFkD,CAInD;;AACD,YAAMC,WAAW,GAAG,yCAAwCL,UAAxC,GAAmD,WAAnD,GAAiE,KAAKN,KAAL,CAAWC,MAA5E,GAAqF,wBAArF,GAAgHO,WAAhH,GAA6H,6BAAjJ,CALoD,CAMnD;;AACD,YAAMI,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACzC,cAAMC,SAAS,GAAIC,KAAK,CAACN,WAAD,CAAxB;AACAG,QAAAA,OAAO,CAACE,SAAD,CAAP;AACJ,OAHe,CAAhB,CAPoD,CAWpD;;AACAJ,MAAAA,OAAO,CAACM,IAAR,CAAcC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EAAzB,EACA;AADA,OAECF,IAFD,CAEOG,IAAD,IAAQ;AACb;AACA,cAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwBnB,WAAxB,CAAjB;AACAiB,QAAAA,QAAQ,CAACG,SAAT,GAAoB,EAApB,CAHa,CAId;AACA;;AACC,cAAMC,aAAa,GAAEH,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAArB;AACAD,QAAAA,aAAa,CAACD,SAAd,GAAyB,EAAzB,CAPa,CAQb;;AACA,cAAMG,UAAU,GAAGL,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAnB;AACAC,QAAAA,UAAU,CAACH,SAAX,GAAsB,EAAtB;AACA,cAAMI,UAAU,GAAGN,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAnB;AACA,cAAMG,gBAAgB,GAAGP,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAzB,CAZa,CAab;;AACI,cAAMI,iBAAiB,GAAGV,IAAI,CAACW,OAAL,CAAaC,MAAb,CAAqBC,KAAD,IAAS;AACnDC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC3B,IAAlB;AACI,iBAAO2B,KAAK,CAAC3B,IAAN,KAAcC,WAArB;AACP,SAHyB,CAA1B,CAdS,CAkBT;;AACAuB,QAAAA,iBAAiB,CAACM,OAAlB,CAA2BH,KAAD,IAAS;AAC/BL,UAAAA,UAAU,CAACS,YAAX,CAAwB,KAAxB,EAA8B,qCAAqCJ,KAAK,CAACK,WAAzE;AACAV,UAAAA,UAAU,CAACS,YAAX,CAAwB,KAAxB,EAA8B,0CAA9B;AACAV,UAAAA,UAAU,CAACH,SAAX,GAAqB,6BAA6BS,KAAK,CAACM,KAAxD;AACAd,UAAAA,aAAa,CAACD,SAAd,GAAyB,sCAAsCS,KAAK,CAACO,QAArE;AACAX,UAAAA,gBAAgB,CAACL,SAAjB,GAA4B,wBAAyBS,KAAK,CAACQ,YAA/B,GAA6C,WAAzE;AACApB,UAAAA,QAAQ,CAACqB,WAAT,CAAqBf,UAArB;AACAN,UAAAA,QAAQ,CAACqB,WAAT,CAAqBjB,aAArB;AACAJ,UAAAA,QAAQ,CAACqB,WAAT,CAAqBd,UAArB;AACAP,UAAAA,QAAQ,CAACqB,WAAT,CAAqBb,gBAArB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACA,cAAIb,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AAC1B,kBAAM6B,SAAS,GAAG3B,KAAK,CAAC,wCAAuCiB,KAAK,CAACW,EAA7C,GAAgD,mBAAhD,GAAsE,KAAK7C,KAAL,CAAWC,MAAlF,CAAvB;AACAa,YAAAA,OAAO,CAAC8B,SAAD,CAAP;AACH,WAHD,EAGG1B,IAHH,CAGSC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EAHrB,EAICF,IAJD,CAIOG,IAAD,IAAQ;AACVA,YAAAA,IAAI,CAACyB,IAAL,CAAUT,OAAV,CAAmBhB,IAAD,IAAQ;AACtB,oBAAM0B,MAAM,GAAGxB,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAf;AACA,oBAAMqB,SAAS,GAAGzB,QAAQ,CAACI,aAAT,CAAuB,GAAvB,CAAlB;AACA,oBAAMsB,YAAY,GAAG1B,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAArB;AACAsB,cAAAA,YAAY,CAACX,YAAb,CAA0B,KAA1B,EAAgC,qCAAqCjB,IAAI,CAAC6B,YAA1E;AACAF,cAAAA,SAAS,CAACvB,SAAV,GAAqB,WAAWJ,IAAI,CAAC8B,SAArC;AACAJ,cAAAA,MAAM,CAACtB,SAAP,GAAmB,WAAYJ,IAAI,CAACd,IAApC;AACAe,cAAAA,QAAQ,CAACqB,WAAT,CAAqBI,MAArB;AACAzB,cAAAA,QAAQ,CAACqB,WAAT,CAAqBK,SAArB;AACA1B,cAAAA,QAAQ,CAACqB,WAAT,CAAqBM,YAArB;AAEAd,cAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACH,aAZD;AAaH,WAlBD;AAmBH,SA/BD;AAiCJ,OAtDD;AAwDF,KA3EyB;AAAA;;AA4E1B+B,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAGhD,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,EAAwB,UAAxB,EAAmC,OAAnC,EAA2C,OAA3C,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,EAAD;AAAI,MAAA,YAAY,EAAGA,KAAD,IAAS,KAAKD,YAAL,CAAkBC,KAAlB,EAAwB,OAAxB,EAAgC,IAAhC,EAAqC,MAArC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAOH;;AApFyB;;AAsF9B,eAAeL,MAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Header from \"./Header/Header\"\nimport Movie from \"./Body/Movie/Movie\"\nimport TV from \"./Body/TV/TV\"\n\nclass Layout extends Component{\n    // creatong the states\n    state = {\n        apiKey:\"b2f49c297ee42a377615666c4da25acf\",\n        storedDate:[]\n    }\n    // creating input hnadler function where it will pull from the movie dba apt anytime someone types something\n    inputHandler =  (event,divLocation,searchType,name) => {\n        //storing the event\n         let searchField = event.target.value\n\n        // storing the URL for searching movies\n       const movieSearch = \"https://api.themoviedb.org/3/search/\"+ searchType+\"?api_key=\" + this.state.apiKey + \"&language=en-US&query=\" + searchField +\"&page=1&include_adult=false\"\n        // creating my promise    \n       const promise = new Promise((resolve,reject)=>{\n            const catchData =  fetch(movieSearch)\n            resolve(catchData);\n       })\n       // converting the data to json data\n       promise.then((response)=>response.json())\n       //converting the data to a object\n       .then((data)=>{\n        // grabbed the div tag from the Movie.js\n        const movieDiv = document.getElementById(divLocation);\n        movieDiv.innerHTML =\"\"\n       // movieDiv.innerHTML=\"\"\n       // create p tag for movie over view\n        const movieOverView =document.createElement(\"p\")\n        movieOverView.innerHTML =\"\"\n        // create p tag for movie title\n        const movieTilte = document.createElement(\"p\")\n        movieTilte.innerHTML =\"\"\n        const movieImage = document.createElement(\"img\");\n        const movieReleaseDate = document.createElement(\"p\");\n        // filter through the list of objects        \n            const filteredMovieData = data.results.filter((movie)=>{\n                console.log(movie.name)\n                    return movie.name=== searchField\n            })\n            // printing off the list of objects\n            filteredMovieData.forEach((movie)=>{\n                movieImage.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + movie.poster_path)\n                movieImage.setAttribute(\"alt\",\"Sorry, there are problems with the image\")\n                movieTilte.innerHTML=\"<Strong>Title: </Strong>\" + movie.title\n                movieOverView.innerHTML =\"<Strong>Movie Overview: </Strong>\" + movie.overview\n                movieReleaseDate.innerHTML= \"<Strong> Released: \" +  movie.release_date+ \"</Strong>\"\n                movieDiv.appendChild(movieTilte)\n                movieDiv.appendChild(movieOverView)\n                movieDiv.appendChild(movieImage)\n                movieDiv.appendChild(movieReleaseDate)\n                console.log(movieTilte)\n                console.log(movieOverView)\n                new Promise((resolve,reject)=>{\n                    const actorData = fetch(\"https://api.themoviedb.org/3/movie/\"+ movie.id+\"/credits?api_key=\" + this.state.apiKey)\n                    resolve(actorData)\n                }).then((response)=> response.json())\n                .then((data)=>{\n                    data.cast.forEach((data)=>{\n                        const actorP = document.createElement(\"p\");\n                        const actorRole = document.createElement(\"p\")\n                        const actorPicture = document.createElement(\"img\")\n                        actorPicture.setAttribute(\"src\",\"https://image.tmdb.org/t/p/w300/\" + data.profile_path)\n                        actorRole.innerHTML= \"Role: \" + data.character \n                        actorP.innerHTML = \"Crew: \" +  data.name\n                        movieDiv.appendChild(actorP)\n                        movieDiv.appendChild(actorRole)\n                        movieDiv.appendChild(actorPicture)\n\n                        console.log(data)\n                    })\n                })\n            })\n       \n       })\n       \n    }\n    render(){\n        return (\n            <div>\n            <Header></Header>\n            <Movie inputHandler={(event) => this.inputHandler(event,\"movieDiv\",\"movie\",\"title\")}></Movie>\n            <TV inputHandler={(event)=>this.inputHandler(event,\"tvDiv\",\"tv\",\"name\")}></TV>\n            </div>\n        )\n    }\n}\nexport default Layout"]},"metadata":{},"sourceType":"module"}